<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Uncomment to also build the ios app -->
		<!--<TargetFrameworks>net8.0-ios</TargetFrameworks>-->
		
		<!-- Uncomment to also build the android app -->
		<TargetFrameworks>net8.0-android34.0</TargetFrameworks>

		<!-- Uncomment to also build the windows app -->
		<!--<TargetFrameworks>net8.0-windows10.0.22621.0</TargetFrameworks>-->
		
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>fonoteca</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>disable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>Fonoteca</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.nuevaluz.appfonoteca</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- Uncomment to also build the ios app -->
		<!--<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>-->
		<!-- Uncomment to also build the android app -->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">26.0</SupportedOSPlatformVersion>
		<!--<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>-->
	</PropertyGroup>

	<PropertyGroup>
		<RunAOTCompilation>false</RunAOTCompilation>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<AppInstallerUri>c:\tmp</AppInstallerUri>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<DefaultLanguage>es-es</DefaultLanguage>
		<GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
		<AssemblyName>fonoteca</AssemblyName>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-ios|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	  <MtouchUseLlvm>True</MtouchUseLlvm>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-maccatalyst|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-android34.0|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	  <AndroidUseAapt2>True</AndroidUseAapt2>
	  <AndroidCreatePackagePerAbi>False</AndroidCreatePackagePerAbi>
	  <AndroidPackageFormat>aab</AndroidPackageFormat>
	  <EmbedAssembliesIntoApk>True</EmbedAssembliesIntoApk>
	  <ApplicationDisplayVersion>2.0.5</ApplicationDisplayVersion>
	  <ApplicationVersion>5</ApplicationVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-windows10.0.19041.0|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-ios|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-maccatalyst|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android34.0|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	  <AndroidPackageFormat>aab</AndroidPackageFormat>
	  <AndroidUseAapt2>True</AndroidUseAapt2>
	  <AndroidCreatePackagePerAbi>False</AndroidCreatePackagePerAbi>
	  <ApplicationDisplayVersion>2.0.5</ApplicationDisplayVersion>
	  <ApplicationVersion>5</ApplicationVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-windows10.0.19041.0|AnyCPU'">
	  <NoWarn>1701;1702;XC0022</NoWarn>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
		<CodesignEntitlements>Platforms/iOS/Entitlements.plist</CodesignEntitlements>
		<ProvisioningType>manual</ProvisioningType>
		<CodesignKey>iPhone Distribution</CodesignKey>
		<CodesignProvision>Distribucion</CodesignProvision>
	</PropertyGroup>

	<!--https://github.com/xamarin/GoogleApisForiOSComponents/issues/643#issuecomment-1920970044-->
	<PropertyGroup Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
		<_ExportSymbolsExplicitly>false</_ExportSymbolsExplicitly>
	</PropertyGroup>
	
	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
		<PackageReference Include="AdamE.Firebase.iOS.Analytics" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.Auth" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.CloudMessaging" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.Core" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.Crashlytics" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.DynamicLinks" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.CloudFirestore" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.CloudFunctions" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.RemoteConfig" Version="11.8.0" />
		<PackageReference Include="AdamE.Firebase.iOS.Storage" Version="11.8.0" />
	</ItemGroup>
	
	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#FFFFFF" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="appsettings.json" />	  
	  <None Remove="Platforms\Android\Resources\values\strings.xml" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="AWSSDK.SimpleNotificationService" Version="3.7.301.43" />
		<PackageReference Include="CommunityToolkit.Maui.MediaElement" Version="3.1.1" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.100" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.100" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="Mopups" Version="1.3.1" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="RestSharp" Version="112.0.0" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android34.0'">
		<PackageReference Include="Plugin.Firebase" Version="3.1.3" />
		<PackageReference Include="Plugin.Firebase.Crashlytics" Version="3.1.1" />
		<PackageReference Include="Xamarin.AndroidX.Preference">
			<Version>1.2.1.8</Version>
		</PackageReference>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-ios'">
		<PackageReference Include="Plugin.Firebase" Version="3.1.3" />
		<PackageReference Include="Plugin.Firebase.Crashlytics" Version="3.1.1" />
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Include="appsettings.json">
	    <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Pages\BookDetailsPage.xaml.cs">
	    <DependentUpon>BookDetailsPage.xaml</DependentUpon>
	  </Compile>
	  <Compile Update="Pages\ForgotPasswordPage.xaml.cs">
	    <DependentUpon>ForgotPasswordPage.xaml</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="Pages\AudioBookIndexPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\AudioBookInformationPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\AudioLibraryPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\AudioPlayerPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\BookDetailsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\BookmarksPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ByAuthorPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ByAuthorTitlesPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ByTitlePage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ChangePasswordPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ConfigurationMemoryPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ConfigurationPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ConfigurationSpeedPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\ForgotPasswordPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\LoadingPopupPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\LoginPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\MyAudioBooksPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\NavigationLevelsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\NotificationDetailPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\NotificationsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\SubscriptionsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\SubscriptionTitleDetailsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Pages\SubscriptionTitlesPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="PopUps\LoadingPopUpPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

	<!-- Target needed until LinkWithSwiftSystemLibraries makes it into the SDK: https://github.com/xamarin/xamarin-macios/pull/20463 -->
	<Target Name="LinkWithSwift" DependsOnTargets="_ParseBundlerArguments;_DetectSdkLocations" BeforeTargets="_LinkNativeExecutable">
	  <PropertyGroup>
	    <_SwiftPlatform Condition="$(RuntimeIdentifier.StartsWith('iossimulator-'))">iphonesimulator</_SwiftPlatform>
		<_SwiftPlatform Condition="$(RuntimeIdentifier.StartsWith('ios-'))">iphoneos</_SwiftPlatform>
	  </PropertyGroup>
	  <ItemGroup>
		<_CustomLinkFlags Include="-L" />
		<_CustomLinkFlags Include="/usr/lib/swift" />
		<_CustomLinkFlags Include="-L" />
		<_CustomLinkFlags Include="$(_SdkDevPath)/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/$(_SwiftPlatform)" />
		<_CustomLinkFlags Include="-Wl,-rpath" />
		<_CustomLinkFlags Include="-Wl,/usr/lib/swift" />
	  </ItemGroup>
	</Target>
</Project>
